// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: accounts.sql

package sqlc

import (
	"context"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO accounts (nickname, email, hashed_password)
VALUES ($1, $2, $3)
RETURNING id, nickname, email, hashed_password, inserted_at, updated_at, deleted_at
`

type CreateAccountParams struct {
	Nickname       string
	Email          string
	HashedPassword string
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error) {
	row := q.db.QueryRow(ctx, createAccount, arg.Nickname, arg.Email, arg.HashedPassword)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Nickname,
		&i.Email,
		&i.HashedPassword,
		&i.InsertedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}

const getAccountByEmail = `-- name: GetAccountByEmail :one
SELECT id, nickname, email, hashed_password, inserted_at, updated_at, deleted_at FROM accounts
WHERE email = $1
`

func (q *Queries) GetAccountByEmail(ctx context.Context, email string) (Account, error) {
	row := q.db.QueryRow(ctx, getAccountByEmail, email)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Nickname,
		&i.Email,
		&i.HashedPassword,
		&i.InsertedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}
